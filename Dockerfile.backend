FROM golang:1.20-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache gcc musl-dev

# Copy go module files first for better caching
COPY server-go/go.mod server-go/go.sum ./
RUN go mod download

# Copy the rest of the source code
COPY server-go/ ./

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -o mentorback .

# Create final lightweight image
FROM alpine:latest

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache ca-certificates

# Copy the binary from the builder stage
COPY --from=builder /app/mentorback /app/mentorback

# Copy any necessary config files
COPY server-go/config/config.yaml /app/config/ 

# Create uploads directory
RUN mkdir -p /app/uploads/avatars

# Set proper permissions
RUN chmod +x /app/mentorback

# Expose the port the server runs on
EXPOSE 5000

# Run the binary
CMD ["/app/mentorback"] 